apply plugin: 'com.android.library'

def androidConfig = rootProject.ext.android
def libConfig = rootProject.ext.dependencies

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'

    //base
    compile libConfig.appcompat_v7
    compile libConfig.design
    compile libConfig.recyclerview_v7
    compile libConfig.cardview_v7
    compile libConfig.constraint

    //rx
    compile libConfig.rxjava
    compile libConfig.rxandroid
    compile libConfig.rxpermissions
    compile libConfig.retrofit_adapter_rxjava2
    compile libConfig.retrofit_converter_gson
    compile libConfig.rxlifecycle
    compile libConfig.rxlifecycle_components

    //network
    compile libConfig.gson
    compile libConfig.retrofit
    compile libConfig.okhttp
    compile libConfig.okhttp_logging_interceptor
    compile libConfig.glide
}
